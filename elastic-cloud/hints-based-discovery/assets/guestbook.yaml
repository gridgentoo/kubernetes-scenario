---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-config
  namespace: default
data:
  redis.conf: |-
    pidfile /var/run/redis.pid
    port 6379
    tcp-backlog 511
    timeout 0
    tcp-keepalive 0
    loglevel notice
    databases 16
    save 900 1
    save 300 10
    save 60 10000
    stop-writes-on-bgsave-error yes
    rdbcompression yes
    rdbchecksum yes
    dbfilename dump.rdb
    dir /data
    slave-serve-stale-data yes
    slave-read-only yes
    repl-diskless-sync no
    repl-diskless-sync-delay 5
    repl-disable-tcp-nodelay no
    slave-priority 100
    appendonly no
    appendfilename "appendonly.aof"
    appendfsync everysec
    no-appendfsync-on-rewrite no
    auto-aof-rewrite-percentage 100
    auto-aof-rewrite-min-size 64mb
    aof-load-truncated yes
    lua-time-limit 5000
    slowlog-log-slower-than 10
    slowlog-max-len 128
    latency-monitor-threshold 0
    notify-keyspace-events ""
    hash-max-ziplist-entries 512
    hash-max-ziplist-value 64
    list-max-ziplist-entries 512
    list-max-ziplist-value 64
    set-max-intset-entries 512
    zset-max-ziplist-entries 128
    zset-max-ziplist-value 64
    hll-sparse-max-bytes 3000
    activerehashing yes
    client-output-buffer-limit normal 0 0 0
    client-output-buffer-limit slave 256mb 64mb 60
    client-output-buffer-limit pubsub 32mb 8mb 60
    hz 10
    aof-rewrite-incremental-fsync yes
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mod-status-setup-config
  namespace: default
data:
  status.conf: |-
    <IfModule mod_status.c>
        # Allow server status reports generated by mod_status,
        # with the URL of http://servername/server-status
        # Uncomment and change the "192.0.2.0/24" to allow access from other hosts.
        <Location /server-status>
                SetHandler server-status
                #Require local
                Require ip 10.0.0.0/8
        </Location>
        # Keep track of extended status information for each request
        ExtendedStatus On
        # Determine if mod_status displays the first 63 characters of a request or
        # the last 63, assuming the request itself is greater than 63 chars.
        # Default: Off
        #SeeRequestTail On
        <IfModule mod_proxy.c>
                # Show Proxy LoadBalancer status in mod_status
                ProxyStatus On
        </IfModule>
    </IfModule>
    # vim: syntax=apache ts=4 sw=4 sts=4 sr noet
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: apache2-config
  namespace: default
data:
  apache2.conf: |-
    # see http://sources.debian.net/src/apache2/2.4.10-1/debian/config-dir/apache2.conf

    Mutex file:/var/lock/apache2 default
    PidFile /var/run/apache2/apache2.pid
    Timeout 300
    KeepAlive On
    MaxKeepAliveRequests 100
    KeepAliveTimeout 5
    User www-data
    Group www-data
    HostnameLookups Off
    ErrorLog "/proc/self/fd/2"
    LogLevel warn

    IncludeOptional mods-enabled/*.load
    IncludeOptional mods-enabled/*.conf

    # ports.conf
    Listen 80
    <IfModule ssl_module>
        Listen 443
    </IfModule>
    <IfModule mod_gnutls.c>
        Listen 443
    </IfModule>

    <Directory />
        Options FollowSymLinks
        AllowOverride None
        Require all denied
    </Directory>

    <Directory /var/www/>
        AllowOverride All
        Require all granted
    </Directory>

    DocumentRoot /var/www/html

    AccessFileName .htaccess
    <FilesMatch "^\.ht">
        Require all denied
    </FilesMatch>


    LogFormat "%v:%p %h %l %u %t \"%r\" %>s %O \"%{Referer}i\" \"%{User-Agent}i\"" vhost_combined
    LogFormat "%h %l %u %t \"%r\" %>s %O \"%{Referer}i\" \"%{User-Agent}i\"" combined
    #LogFormat "%{X-Forwarded-For}i %h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" combined
    LogFormat "%h %l %u %t \"%r\" %>s %b" common
    LogFormat "%{Referer}i -> %U" referer
    LogFormat "%{User-agent}i" agent

    CustomLog "/proc/self/fd/1" combined

    <FilesMatch \.php$>
        SetHandler application/x-httpd-php
    </FilesMatch>

    # Multiple DirectoryIndex directives within the same context will add
    # to the list of resources to look for rather than replace
    # https://httpd.apache.org/docs/current/mod/mod_dir.html#directoryindex
    DirectoryIndex disabled
    DirectoryIndex index.php index.html

    IncludeOptional conf-enabled/*.conf
    IncludeOptional sites-enabled/*.conf
---
apiVersion: v1
kind: Service
metadata:
  name: redis-master
  labels:
    app: redis
    tier: backend
    role: master
spec:
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app: redis
    tier: backend
    role: master
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: redis-master
spec:
  replicas: 1
  template:
    metadata:
      annotations:
        co.elastic.logs/module: redis
        co.elastic.logs/fileset.stdout: log
        co.elastic.metrics/module: redis
        co.elastic.metrics/metricsets: "info, keyspace"
        co.elastic.metrics/hosts: '${data.host}:${data.port}'
      labels:
        app: redis
        role: master
        tier: backend
    spec:
      containers:
      - name: master
        image: k8s.gcr.io/redis:e2e  # or just image: redis
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 6379
        volumeMounts:
        - name: redis-config
          mountPath: /etc/redis/redis.conf
          readOnly: true
          subPath: redis.conf
      volumes:
        - name: redis-config
          configMap:
            defaultMode: 0600
            name: redis-config
---
apiVersion: v1
kind: Service
metadata:
  name: redis-slave
  labels:
    app: redis
    tier: backend
    role: slave
spec:
  ports:
  - port: 6379
  selector:
    app: redis
    tier: backend
    role: slave
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: redis-slave
spec:
  replicas: 1
  template:
    metadata:
      annotations:
        co.elastic.logs/module: redis
        co.elastic.logs/fileset.stdout: log
        co.elastic.metrics/module: redis
        co.elastic.metrics/metricsets: "info, keyspace"
        co.elastic.metrics/hosts: '${data.host}:${data.port}'
      labels:
        app: redis
        role: slave
        tier: backend
    spec:
      containers:
      - name: slave
        image: gcr.io/google_samples/gb-redisslave:v1
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        env:
        - name: GET_HOSTS_FROM
          value: dns
          # If your cluster config does not include a dns service, then to
          # instead access an environment variable to find the master
          # service's host, comment out the 'value: dns' line above, and
          # uncomment the line below:
          # value: env
        ports:
        - containerPort: 6379
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  labels:
    app: guestbook
    tier: frontend
spec:
  # if your cluster supports it, uncomment the following to automatically create
  # an external load-balanced IP for the frontend service.
  type: LoadBalancer
  #type: NodePort
  externalTrafficPolicy: Local
  ports:
  - port: 80
  selector:
    app: guestbook
    tier: frontend
---
#apiVersion: extensions/v1beta1
#kind: Ingress
#metadata:
#name: frontend-ingress
#spec:
#backend:
#serviceName: frontend
#servicePort: 80
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: frontend
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: guestbook
        tier: frontend
      annotations:
        co.elastic.logs/module: apache2
        co.elastic.logs/fileset.stdout: access
        co.elastic.logs/fileset.stderr: error
        co.elastic.metrics/module: apache
        co.elastic.metrics/metricsets: status
        co.elastic.metrics/hosts: '${data.host}:${data.port}'
    spec:
      containers:
      - name: php-redis
        image: gcr.io/google-samples/gb-frontend:v4
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        env:
        - name: GET_HOSTS_FROM
          value: dns
          # If your cluster config does not include a dns service, then to
          # instead access environment variables to find service host
          # info, comment out the 'value: dns' line above, and uncomment the
          # line below:
          # value: env
        ports:
        - containerPort: 80
        volumeMounts:
        - name: apache2-config
          mountPath: /etc/apache2/apache2.conf
          readOnly: true
          subPath: apache2.conf
        - name: mod-status-config
          mountPath: /etc/apache2/mods-available/status.conf
          readOnly: true
          subPath: status.conf
      volumes:
        - name: apache2-config
          configMap:
            defaultMode: 0600
            name: apache2-config
        - name: mod-status-config
          configMap:
            defaultMode: 0600
            name: mod-status-setup-config
